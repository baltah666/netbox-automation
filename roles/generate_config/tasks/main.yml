---
- name: 1 - Get Devices
  uri:
    url: >-
      {{ netbox_url }}api/dcim/devices/
      {% if devices is defined and devices != "All" %}
        ?name__in={{ devices | replace(" ", "") }}
      {% elif site is defined %}
        ?site={{ site }}
      {% else %}
        ?name={{ inventory_hostname }}
      {% endif %}
    method: GET
    return_content: yes
    headers:
      accept: "application/json"
      Authorization: "Token {{ netbox_token }}"
  register: device

- name: 2 - Get Interfaces
  uri:
    url: "{{ netbox_url }}api/dcim/interfaces/?device={{ inventory_hostname }}&limit=0"
    method: GET
    return_content: yes
    headers:
      accept: "application/json"
      Authorization: "Token {{ netbox_token }}"
  register: interfaces

- name: 3 - Get IP Addresses
  uri:
    url: "{{ netbox_url }}api/ipam/ip-addresses/?device={{ inventory_hostname }}"
    method: GET
    return_content: yes
    headers:
      accept: "application/json"
      Authorization: "Token {{ netbox_token }}"
  register: ip_addresses

- name: 4 - Get Site Details
  uri:
    url: >-
      {{ netbox_url }}api/dcim/sites/
      {% if site is defined %}
        ?name={{ site }}
      {% else %}
        ?name={{ device.json.results[0]['site']['name'] }}
      {% endif %}
    method: GET
    return_content: yes
    headers:
      accept: "application/json"
      Authorization: "Token {{ netbox_token }}"
  register: site

- name: 5 - Get List of VLANs for Site
  uri:
    url: "{{ netbox_url }}api/ipam/vlans/?site_id={{ site.json.results[0]['id'] }}"
    method: GET
    return_content: yes
    headers:
      accept: "application/json"
      Authorization: "Token {{ netbox_token }}"
  register: vlans

- name: 6 - Create temporary folder for Device Configs
  file:
    dest: "{{ configs_directory }}/{{ inventory_hostname }}"
    state: directory

- name: 7 - Create configuration files
  template:
    src: "templates/{{ platforms[0] }}.j2"
    dest: "{{ configs_directory }}/{{ inventory_hostname }}/{{ inventory_hostname }}.conf"

- name: JUNOS BONUS PLAY!! - Create Junos config using Set Commands
  template:
    src: "templates/{{ platforms[0] }}-set.j2"
    dest: "{{ configs_directory }}/{{ inventory_hostname }}/{{ inventory_hostname }}.set"
  when: platforms[0] == 'juniper-junos'

- name: 8 - Save all registered variables to JSON files
  copy:
    content: "{{ lookup('ansible.builtin.vars', item) | to_nice_json }}"
    dest: "{{ configs_directory }}/{{ inventory_hostname }}/{{ item }}.json"
  loop:
    - device
    - interfaces
    - ip_addresses
    - site
    - vlans
